# ===================================================================
# 任务数据包 (TASK PACKET)
# 项目: 模块化量子模拟器基准测试平台
# ===================================================================

# --- 1. 战略意图 (Strategic Intent) ---
# 描述项目的宏观目标和研究价值。
ProjectGoal: "系统性地评估Qibo量子模拟器在不同后端下的性能，通过与Qiskit、PennyLane等行业标准框架进行严谨的横向对比，来识别性能瓶颈，并为未来的优化工作提供可量化的数据支持。"

# --- 2. 本次任务指令 (Current Mission) ---
# 对本次具体工作包的明确描述。
TaskID: "BH-01" # BH = Benchmarking Harness
TaskDescription: "从零开始构建一个模块化、可扩展的基准测试平台。该平台需能够：1. 以抽象方式定义量子电路；2. 在多个可配置后端的模拟器（Qibo, Qiskit, PennyLane）上执行电路；3. 精确测量多种性能指标（执行时间、峰值内存、CPU利用率）；4. 生成用于分析的结构化数据（CSV）和可视化图表。"

# --- 3. 执行蓝图 (Execution Blueprint) ---
# 指向详细的、分阶段的实施计划文件。
ImplementationPlan: "./IMPLEMENTATION_PLAN.md"
 
# --- 4. 编码标准与工具链 (Coding Standards & Tooling) ---
# 由于这是一个新项目，没有代码范例可供学习。
# 因此，你必须严格遵守以下可执行的编码标准。
CodingStandardsAndTooling:
  StyleGuide: "所有Python代码必须严格遵守PEP 8风格指南。"
  Formatter: "所有代码在提交前必须使用 `black` 代码格式化工具以默认配置进行格式化。"
  Linter: "所有代码必须通过 `flake8` 静态检查，不允许存在任何警告或错误。"
  ImportSorting: "所有导入语句必须使用 `isort` 并且配置为 `black` 兼容模式进行排序。"
  TypeHinting: "所有新函数和类方法的参数与返回值都必须包含PEP 484风格的类型提示。"
  Instructions: "你需要在你的'预提交验证'循环中，通过 `execute_shell` 命令显式地运行这些工具，并确保它们成功通过。"

# --- 5. 验收标准 (Definition ofDone) ---
# 这是一个硬性检查清单。当所有项都满足时，任务才算真正完成。
# 你需要在最终的交付报告中逐项确认。
DefinitionOfDone:
  - "[ ] 所有新代码都必须拥有对应的Pytest单元测试和集成测试，并达到高覆盖率。"
  - "[ ] 位于项目根目录的 `run_benchmarks.py` 脚本必须是可执行的，并能通过命令行参数进行完整配置。"
  - "[ ] 脚本成功运行后，必须在 `results/` 目录下生成一个带时间戳的CSV文件和多个PNG格式的可视化图表。"
  - "[ ] 整个代码库必须完全符合在 `CodingStandardsAndTooling` 部分定义的所有标准（通过black, flake8, isort检查）。"
  - "[ ] 项目根目录下必须包含一个 `README.md` 文件，清晰地说明如何设置虚拟环境、安装依赖以及如何通过命令行运行基准测试。"
  - "[ ] 代码中不允许存在任何没有关联问题编号的 `# TODO` 注释。"